; Style setup

[.blue]
00=A 17
[.black]
00=A 07

[.control]
00=O 40
[.quote]
00=Q XB
[.number]
00=D XB
[.$]
00=C XB $\
[.operator]
00=C XF .:!|/<[{()}]>,-*+?%&=^~";"

[Common]
00=.control
01=.quote
02=.number
03=.$
04=.operator

[.<>]
00=N X6 < >
[.<!>]
00=N X8 <! >
[.#]
00=B X2 #

[Styletype.*]
00=.black
01=.<>
02=[Common]
03=.#
04=.<!>
[Styletype.*.ini]
00=[common_asm]
[Styletype.*.asm]
00=[common_asm]
[Styletype.*.inc]
00=[common_asm]
[Styletype.*.c]
00=[common_c]
[Styletype.*.h]
00=[common_c]

[.if]
00=W X2 if else elseif endif while break endw
[.ifdef]
00=B X2 ifdef ifndef
[.comment]
00=B X8 ";"
[.include]
00=B X2 include
[.segment]
00=W X5 cs ds es ss
[.base]
00=W X6 bp si di bx bh bl
[.accumulator]
00=W X4 eax ax ah al
[.regs]
00=W X2
01=cl dl ch dh cx dx sp
[.jumps]
00=W X9
01=jmp ja jb jc jz jna jnb jnc jnz jna jnz je jne jae jbe
02=jl jg jle jge js jns
[.call]
00=W X6 call invoke int ret retf iret func
[.directive]
00=W XF public local extrn label
01=proto proc near far endp ends size struc
02=segment seg offset ptr byte word dword db dw dd equ textequ
03=pascal c stdcall end externdef model compact large
04=macro endm
[.segments]
00=W XF code data stack _text _data flat
[common_asm]
00=.black
01=[Common]
02=.regs
03=.segment
04=.accumulator
05=.base
06=.segments
07=.call
08=.jumps
09=.directive
10=.if
11=.ifdef
12=.include
13=.comment

[.//]
00=B X8 //
[./**/]
00=N X8 /* */
[.c.words]
00=W XF const operator char int long void
01=if else for do while break continue goto return
02=switch case default public extern
[common_c]
00=.black
01=[Common]
02=.c.words
03=.//
04=.#
05=./**/
